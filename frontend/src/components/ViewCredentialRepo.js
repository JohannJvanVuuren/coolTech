/**
 * Dependency modules and hooks
 */
import {useState, useEffect} from "react";
import axios from 'axios';

/**
 * Import of other components needed
 */
import {Header} from "./Header";
import {NavigationBar} from "./NavigationBar";

/**
 * Import of the main stylesheet generated by the SCSS files and preprocessor
 */
import '../scss/main.css';
/* Import of Styled React Bootstrap Table */
import Table from 'react-bootstrap/Table';

export const ViewCredentialRepo = () =>{

    /* Declaration of the array used for rendering the table data of the credential repos */
    const [userDiscreteCredentials, setUserDiscreteCredentials] = useState([]);

    /*
     * useEffect hook to run the axios call to the backend once to get the credential repo info that
     * needs to be displayed on this page
     */
    useEffect(() => {

        /* Acquiring the JWT token from localStorage */
        const token = localStorage.getItem('JWT token')

        /* Axios configuration parameters */
        const apiUrl = 'http://localhost:8000/api/view-credentials';
        const config = {
            headers: {
                Authorization: 'Bearer ' + token
            }
        }

        /* Axios call to the backend endpoint 'view-credentials' */
        axios.get(apiUrl, config)
            .then(response => {
                console.log(response.data)
                setUserDiscreteCredentials(response.data)

            })
            .catch(error => {

                console.log(error)

            })

    }, []);

    return (
        <div className={'view-credentials-wrapper'}>
            <Header/>
            <NavigationBar/>
            <Table
                striped
                bordered
                hover
                responsive
                className={'mt-5 view-credentials-table'}
            >
                <thead>
                <tr>
                    <th
                        colSpan="5"
                        className={'view-credentials-table_heading'}
                    >
                        Authorised Credential Repos
                    </th>
                </tr>
                <tr>
                    <th>Organisational Unit</th>
                    <th>Division</th>
                    <th>Resource</th>
                    <th>Username</th>
                    <th>Password</th>
                </tr>
                </thead>
                <tbody>
                {userDiscreteCredentials.map((resource, index) => {
                    return (
                        <tr key={index}>
                            <td>{resource.organisationalUnitName}</td>
                            <td>{resource.divisionName}</td>
                            <td>{resource.resource}</td>
                            <td>{resource.username}</td>
                            <td>{resource.password}</td>
                        </tr>
                    )
                })}
                </tbody>
            </Table>
        </div>
    );
}
