/**
 * Dependency modules and hooks
 */
import axios from 'axios';
import {useState} from 'react';
import {useLocation, useNavigate} from 'react-router-dom';

/**
 * Import of other components needed */
import {Header} from "./Header";
import {NavigationBar} from "./NavigationBar";

/**
 * Import of the main stylesheet generated by SCSS files and the preprocessor
 */
import '../scss/main.css'
/* Import of styled React Bootstrap components  */
import Form from 'react-bootstrap/Form';
import Button from 'react-bootstrap/Button';

export const UpdateCredential = () => {

    /*
     * The useLocation and useNavigate hooks to get state information from the UpdateCredentialView
     * and to the feedback component linked to this page
     */
    const location = useLocation();
    const navigate = useNavigate();

    /* Acquisition of the state variables from the useLocation hook via destructuring
    * of the location.state object */
    const {credentialRepoId, resource, username, password} = location.state || {};

    /* Declaration and initialisation of state variables */
    const [resourceState, setResourceState] =useState(resource);
    const [usernameState, setUsernameState] = useState(username);
    const [passwordState, setPasswordState] = useState(password);

    /**
     * Function to handle submission of the updated details with an axios call to the backend where
     * it will handle the database update
     */
    const loginFormSubmitHandler = (event) => {

        event.preventDefault();

        /* Acquisition of the JWT token from local storage */
        const token = localStorage.getItem('JWT token');

        /* Setup of axios config */
        const apiUrl = 'http://localhost:8000/api/update-credential';
        const headers = {
            headers: {
                Authorization: 'Bearer ' + token
            }
        }
        const config = {
            credentialRepoId: credentialRepoId,
            resource: resourceState,
            username: usernameState,
            password: passwordState
        }

        /*
         * The axios call to the relevant endpoint and subsequent re-routing to a feedback page for this
         * component
         */
        axios.post(apiUrl, config, headers)
            .then(response => {
                navigate(
                    /* Divert to a user feedback page upon success */
                    '/userFeedback', {
                        state: {
                            message: response.data.message,
                            status: response.status
                        }
                    },{ replace: true})
            })
            .catch(error => {
                /* Divert to a user feedback page upon triggering of an error */
                navigate('/userFeedback', {
                    replace: true,
                    state: {
                        status: error.request.status,
                        message: error.request.statusText
                    }
                })
            })
    }

    /* Rendering of the component */
    return (
        <div>
            <Header/>
            <NavigationBar/>
            {/* Use of the React Bootstrap Form component for the rendering of the form */}
            <Form
                className={'add-repo-form'}
                onSubmit={loginFormSubmitHandler}
            >
                <h1 className={'add-repo-form__heading'}>Add credential repo form</h1>
                <Form.Group className="mb-3" controlId="formBasicText">
                    <Form.Label className={'h4'}>Resource Name</Form.Label>
                    <Form.Control
                        type="text"
                        placeholder="Enter resource name"
                        /* Showing the current value of the field */
                        value={resourceState}
                        /* Change event to capture changes in the field that will be sent to the backend for
                        database updates */
                        onChange={event => setResourceState(event.target.value)}
                        autoFocus
                    />
                </Form.Group>
                <Form.Group className="mb-3" controlId="formBasicText">
                    <Form.Label className={'h4'}>Username</Form.Label>
                    <Form.Control
                        type="text"
                        placeholder="Username"
                        value={usernameState}
                        onChange={event => setUsernameState(event.target.value)}
                    />
                </Form.Group>
                <Form.Group className="mb-3" controlId="formBasicPassword">
                    <Form.Label className={'h4'}>Password</Form.Label>
                    <Form.Control
                        type="text"
                        placeholder="Password"
                        value={passwordState}
                        onChange={event => setPasswordState(event.target.value)}
                    />
                </Form.Group>
                {/* The submit button to trigger the axios call to the backend */}
                <Button
                    variant="primary"
                    type="submit"
                    className="form-buttons"
                >
                    Update
                </Button>
            </Form>
        </div>
    );
}